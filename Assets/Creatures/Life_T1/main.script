self.spawn = fun(self){
	self["tryToFindAndAttackTarget"] = fun(self, dt){
		var targets = self.enemiesInRange(20);
		if(!targets.empty()){
			var target = targets[0].networkId;
			var activeTarget = self["activeTarget"];
			if(activeTarget != target){
				self["activeTarget"] = target;
				self.targeting().target(target, 10, fun[target](targeting){
					targeting.self()["activeTarget"] = 0;
					targeting.self()["attacking"] = true;
					auto spine = targeting.self().spine();
					spine.animate("attack", false);
					spine.onEvent.connect("launch", fun[target, targeting](spine, index, eventData){
						if(eventData.name == "launch"){
							var newMissile = BattleEffectNetworkState(targeting.self().game(), "Missile", targeting.self().networkId);
							newMissile.duration = 1.25;
							newMissile.targetType = TargetType_CREATURE;
							newMissile.targetCreatureId = target;
							auto effect = spawnOnNetwork(newMissile);
							effect.onArrive.connect("Arrive", fun(battleEffect) {
								if(!battleEffect.targetCreature().is_var_null()){
									battleEffect.targetCreature().changeHealth(-5);
								}
							});
						}
					});
					spine.onEnd.connect("unlock", fun[targeting](spine, index){
						if(spine.track(index).name() == "attack"){
							print("ATTACK FALSE");
							targeting.self()["attacking"] = false;
						}
					});
				}, fun(targeting){
					targeting.self()["activeTarget"] = 0;
				});
			}
			return true;
		}
		return false;
	};

	self["applyDefaultTarget"] = fun(self){
		self.targeting.target(self.team.enemyWell, fun(targeting){
			print(to_string(targeting.self().networkId()) + " made it!");
			targeting.self().fall();
		});
	};

	self["attacking"] = false;
	self["activeTarget"] = 0;
	self.agent.gridSpeed(10);
};

self.update = fun(self, dt){
	if(!self["attacking"]){
		if(!self["tryToFindAndAttackTarget"](self, dt)){
			self["applyDefaultTarget"](self);
		}
	}else{
		print("Attacking: " + to_string(self["activeTarget"]));
	}
};